{% extends 'base.html.twig' %}

{% block title %}Modifier l'observation - {{ market_watch.item.name }}{% endblock %}

{% block navbar %}
    {% include 'components/navbar.html.twig' with {
        'title': 'Modifier l\'observation - ' ~ market_watch.item.name,
        'back_url': path('app_market_watch_index')
    } %}
{% endblock %}

{% block body %}
    <div class="wrapper-container">
        <div class="max-w-2xl mx-auto">
            <!-- En-t√™te avec info -->
            <div class="wrapper-background mb-6">
                <div class="flex items-center space-x-4">
                    <div class="w-12 h-12 bg-orange-500 rounded-full flex items-center justify-center">
                        <span class="text-white font-bold text-lg">{{ market_watch.item.name|first|upper }}</span>
                    </div>
                    <div>
                        <h2 class="text-white text-xl font-semibold">{{ market_watch.item.name }}</h2>
                        <p class="text-gray-400">Observ√© le {{ market_watch.observedAt|date('d/m/Y √† H:i') }}</p>
                    </div>
                    <div class="ml-auto text-right">
                        <div class="text-orange-400 font-semibold">üìù Modifier Observation</div>
                        <div class="text-gray-400 text-sm">{{ market_watch.dofusCharacter.name }}</div>
                    </div>
                </div>
            </div>

            <!-- Historique r√©cent pour contexte -->
            <div class="wrapper-background mb-6">
                <h3 class="text-white font-semibold mb-3 flex items-center">
                    <span class="mr-2">üìà</span>
                    Prix actuels √† modifier
                </h3>
                <div class="grid grid-cols-3 gap-4">
                    <div class="bg-gray-700 rounded-lg p-3 text-center">
                        <div class="text-gray-400 text-sm">Prix x1</div>
                        {% if market_watch.pricePerUnit %}
                            <div class="text-green-400 text-lg font-bold">{{ (market_watch.pricePerUnit / 1000)|number_format(0, ',', ' ') }}k</div>
                        {% else %}
                            <div class="text-gray-500">Non renseign√©</div>
                        {% endif %}
                    </div>
                    <div class="bg-gray-700 rounded-lg p-3 text-center">
                        <div class="text-gray-400 text-sm">Prix x10</div>
                        {% if market_watch.pricePer10 %}
                            <div class="text-blue-400 text-lg font-bold">{{ (market_watch.pricePer10 / 1000)|number_format(0, ',', ' ') }}k</div>
                        {% else %}
                            <div class="text-gray-500">Non renseign√©</div>
                        {% endif %}
                    </div>
                    <div class="bg-gray-700 rounded-lg p-3 text-center">
                        <div class="text-gray-400 text-sm">Prix x100</div>
                        {% if market_watch.pricePer100 %}
                            <div class="text-purple-400 text-lg font-bold">{{ (market_watch.pricePer100 / 1000)|number_format(0, ',', ' ') }}k</div>
                        {% else %}
                            <div class="text-gray-500">Non renseign√©</div>
                        {% endif %}
                    </div>
                </div>
            </div>

            <!-- Formulaire de modification -->
            <div class="wrapper-background">
                <h3 class="text-white text-lg font-semibold mb-6 flex items-center">
                    <span class="text-2xl mr-3">üîÑ</span>
                    Mettre √† jour les prix
                </h3>

                {{ form_start(form) }}
                
                <div class="space-y-6">
                    <!-- Ressource (lecture seule) -->
                    <div>
                        {{ form_label(form.item, null, {'label_attr': {'class': 'block text-white font-medium mb-2'}}) }}
                        {{ form_widget(form.item, {'attr': {'class': 'w-full px-4 py-3 border border-gray-600 bg-gray-700 text-white rounded-lg focus:outline-none focus:border-orange-500 focus:ring-2 focus:ring-orange-500 focus:ring-opacity-20', 'readonly': true}}) }}
                        {{ form_errors(form.item) }}
                        <div class="text-gray-400 text-sm mt-1">üîí Ressource observ√©e (non modifiable)</div>
                    </div>

                    <!-- Date d'observation -->
                    <div>
                        {{ form_label(form.observedAt, null, {'label_attr': {'class': 'block text-white font-medium mb-2'}}) }}
                        {{ form_widget(form.observedAt, {'attr': {'class': 'w-full px-4 py-3 border border-gray-600 bg-gray-700 text-white rounded-lg focus:outline-none focus:border-orange-500 focus:ring-2 focus:ring-orange-500 focus:ring-opacity-20'}}) }}
                        {{ form_errors(form.observedAt) }}
                        <div class="text-gray-400 text-sm mt-1">üìÖ Date de cette observation</div>
                    </div>

                    <!-- Prix observ√©s -->
                    <div class="bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg p-4">
                        <h4 class="text-white font-semibold mb-4 flex items-center">
                            <span class="mr-2">üí∞</span>
                            Nouveaux prix observ√©s
                        </h4>
                        <div class="text-blue-100 text-sm mb-4">
                            Modifiez les prix selon vos derni√®res observations. Laissez vide pour supprimer un prix.
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div class="bg-white bg-opacity-10 rounded-lg p-4">
                                {{ form_label(form.pricePerUnit, null, {'label_attr': {'class': 'block text-white font-medium mb-2'}}) }}
                                <div class="relative">
                                    {{ form_widget(form.pricePerUnit, {'attr': {'class': 'w-full px-4 py-3 pr-12 border border-gray-600 bg-gray-700 text-white rounded-lg focus:outline-none focus:border-green-500 focus:ring-2 focus:ring-green-500 focus:ring-opacity-20'}}) }}
                                    <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
                                        <span class="text-gray-400 text-sm">kamas</span>
                                    </div>
                                </div>
                                {{ form_errors(form.pricePerUnit) }}
                                <div class="text-green-200 text-xs mt-1">Prix d'1 seule unit√©</div>
                            </div>

                            <div class="bg-white bg-opacity-10 rounded-lg p-4">
                                {{ form_label(form.pricePer10, null, {'label_attr': {'class': 'block text-white font-medium mb-2'}}) }}
                                <div class="relative">
                                    {{ form_widget(form.pricePer10, {'attr': {'class': 'w-full px-4 py-3 pr-12 border border-gray-600 bg-gray-700 text-white rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500 focus:ring-opacity-20'}}) }}
                                    <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
                                        <span class="text-gray-400 text-sm">kamas</span>
                                    </div>
                                </div>
                                {{ form_errors(form.pricePer10) }}
                                <div class="text-blue-200 text-xs mt-1">Prix d'un lot de 10</div>
                            </div>

                            <div class="bg-white bg-opacity-10 rounded-lg p-4">
                                {{ form_label(form.pricePer100, null, {'label_attr': {'class': 'block text-white font-medium mb-2'}}) }}
                                <div class="relative">
                                    {{ form_widget(form.pricePer100, {'attr': {'class': 'w-full px-4 py-3 pr-12 border border-gray-600 bg-gray-700 text-white rounded-lg focus:outline-none focus:border-purple-500 focus:ring-2 focus:ring-purple-500 focus:ring-opacity-20'}}) }}
                                    <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
                                        <span class="text-gray-400 text-sm">kamas</span>
                                    </div>
                                </div>
                                {{ form_errors(form.pricePer100) }}
                                <div class="text-purple-200 text-xs mt-1">Prix d'un lot de 100</div>
                            </div>
                        </div>
                    </div>

                    <!-- Notes -->
                    <div>
                        {{ form_label(form.notes, null, {'label_attr': {'class': 'block text-white font-medium mb-2'}}) }}
                        {{ form_widget(form.notes, {'attr': {'class': 'w-full px-4 py-3 border border-gray-600 bg-gray-700 text-white rounded-lg focus:outline-none focus:border-orange-500 focus:ring-2 focus:ring-orange-500 focus:ring-opacity-20', 'rows': 3}}) }}
                        {{ form_errors(form.notes) }}
                        <div class="text-gray-400 text-sm mt-1">üìù Contexte du march√©, √©volutions observ√©es...</div>
                    </div>
                </div>

                <!-- √âvolution des prix (si possible) -->
                <div id="price-evolution" class="mt-6 bg-gradient-to-r from-indigo-600 to-blue-600 rounded-lg p-4" style="display: none;">
                    <h4 class="text-white font-semibold mb-2 flex items-center">
                        <span class="mr-2">üìà</span>
                        √âvolution par rapport aux prix actuels
                    </h4>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                        <div id="unit-evolution" class="text-indigo-100"></div>
                        <div id="per10-evolution" class="text-indigo-100"></div>
                        <div id="per100-evolution" class="text-indigo-100"></div>
                    </div>
                </div>

                <!-- Actions -->
                <div class="flex space-x-4 mt-8">
                    <button type="submit" class="flex-1 bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-colors flex items-center justify-center">
                        <span class="mr-2">üíæ</span>
                        Sauvegarder les modifications
                    </button>
                    <a href="{{ path('app_market_watch_index') }}" 
                       class="flex-1 bg-gray-600 hover:bg-gray-700 text-white font-bold py-3 px-6 rounded-lg transition-colors text-center flex items-center justify-center">
                        <span class="mr-2">‚ùå</span>
                        Annuler
                    </a>
                </div>

                {{ form_end(form) }}
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const priceUnit = document.getElementById('market_watch_pricePerUnit');
        const price10 = document.getElementById('market_watch_pricePer10');
        const price100 = document.getElementById('market_watch_pricePer100');
        const evolutionDiv = document.getElementById('price-evolution');
        
        // Prix actuels (avant modification)
        const currentPrices = {
            unit: {{ market_watch.pricePerUnit ?? 'null' }},
            per10: {{ market_watch.pricePer10 ?? 'null' }},
            per100: {{ market_watch.pricePer100 ?? 'null' }}
        };
        
        function updateEvolution() {
            const newPrices = {
                unit: parseInt(priceUnit.value) || null,
                per10: parseInt(price10.value) || null,
                per100: parseInt(price100.value) || null
            };
            
            let hasChanges = false;
            
            // V√©rifier s'il y a des changements
            if ((newPrices.unit !== currentPrices.unit) || 
                (newPrices.per10 !== currentPrices.per10) || 
                (newPrices.per100 !== currentPrices.per100)) {
                hasChanges = true;
            }
            
            if (hasChanges) {
                evolutionDiv.style.display = 'block';
                
                // Calculer et afficher les √©volutions
                updateEvolutionDisplay('unit', currentPrices.unit, newPrices.unit, 'unit-evolution');
                updateEvolutionDisplay('per10', currentPrices.per10, newPrices.per10, 'per10-evolution');
                updateEvolutionDisplay('per100', currentPrices.per100, newPrices.per100, 'per100-evolution');
            } else {
                evolutionDiv.style.display = 'none';
            }
        }
        
        function updateEvolutionDisplay(type, oldPrice, newPrice, elementId) {
            const element = document.getElementById(elementId);
            
            if (oldPrice === null && newPrice !== null) {
                element.innerHTML = `<span class="text-green-300">+ Nouveau prix ajout√©</span>`;
            } else if (oldPrice !== null && newPrice === null) {
                element.innerHTML = `<span class="text-red-300">- Prix supprim√©</span>`;
            } else if (oldPrice !== null && newPrice !== null) {
                const diff = newPrice - oldPrice;
                const percent = ((diff / oldPrice) * 100).toFixed(1);
                
                if (diff > 0) {
                    element.innerHTML = `<span class="text-red-300">‚Üó +${diff.toLocaleString()}k (+${percent}%)</span>`;
                } else if (diff < 0) {
                    element.innerHTML = `<span class="text-green-300">‚Üò ${diff.toLocaleString()}k (${percent}%)</span>`;
                } else {
                    element.innerHTML = `<span class="text-gray-300">= Aucun changement</span>`;
                }
            } else {
                element.innerHTML = '';
            }
        }
        
        [priceUnit, price10, price100].forEach(input => {
            if (input) input.addEventListener('input', updateEvolution);
        });
        
        // V√©rification initiale
        updateEvolution();
    });
    </script>
{% endblock %}